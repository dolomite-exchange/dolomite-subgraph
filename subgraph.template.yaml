specVersion: 0.0.2
description: Dolomite is a decentralized exchange for margin trading tokens using AMM pools.
repository: https://github.com/dolomite-exchange/dolomite-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: AmmFactory
    network: {{network}}
    source:
      address: '{{dolomiteAmmFactoryAddress}}'
      abi: DolomiteAmmFactory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/amm-factory.ts
      entities:
        - AmmFactory
        - AmmPair
        - Token
        - Transaction
      abis:
        - name: DolomiteAmmFactory
          file: ./abis/dolomite-amm-factory.json
        - name: FactoryERC20
          file: ./abis/erc20.json
      eventHandlers:
        - event: PairCreated(indexed address,indexed address,address,uint256)
          handler: handleNewPair
  - kind: ethereum/contract
    name: MarginCore
    network: {{network}}
    source:
      address: '{{dolomiteMarginAddress}}'
      abi: DolomiteMargin
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/margin-core.ts
      entities:
        - MarginPosition
        - Token
        - Transaction
      abis:
        - name: DolomiteMargin
          file: ./abis/dolomite-margin.json
        - name: DolomiteMarginExpiry
          file: ./abis/dolomite-margin-expiry.json
      eventHandlers:
        - event: LogIndexUpdate(indexed uint256,(uint96,uint96,uint32))
          handler: handleIndexUpdate
        - event: LogOraclePrice(indexed uint256,(uint256))
          handler: handleOraclePriceUpdate
        - event: LogDeposit(indexed address,uint256,uint256,((bool,uint256),(bool,uint128)),address)
          handler: handleDeposit
        - event: LogWithdraw(indexed address,uint256,uint256,((bool,uint256),(bool,uint128)),address)
          handler: handleWithdraw
        - event: LogTransfer(indexed address,uint256,indexed address,uint256,uint256,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)))
          handler: handleTransfer
        - event: LogBuy(indexed address,uint256,uint256,uint256,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),address)
          handler: handleBuy
        - event: LogSell(indexed address,uint256,uint256,uint256,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),address)
          handler: handleSell
        - event: LogTrade(indexed address,uint256,indexed address,uint256,uint256,uint256,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),address)
          handler: handleTrade
        - event: LogLiquidate(indexed address,uint256,indexed address,uint256,uint256,uint256,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)))
          handler: handleLiquidate
        - event: LogVaporize(indexed address,uint256,indexed address,uint256,uint256,uint256,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)))
          handler: handleVaporize
        - event: LogCall(indexed address,uint256,address)
          handler: handleCall
  - kind: ethereum/contract
    name: MarginAdmin
    network: {{network}}
    source:
      address: '{{dolomiteMarginAddress}}'
      abi: DolomiteMargin
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/margin-admin.ts
      entities:
        - MarginPosition
        - Token
        - Transaction
      abis:
        - name: DolomiteMargin
          file: ./abis/dolomite-margin.json
        - name: DolomiteMarginExpiry
          file: ./abis/dolomite-margin-expiry.json
        - name: DolomiteMarginERC20
          file: ./abis/erc20.json
        - name: LinearStepFunctionInterestSetter
          file: ./abis/linear-step-function-interest-setter.json
      eventHandlers:
        - event: LogAddMarket(uint256,address)
          handler: handleMarketAdded
        - event: LogRemoveMarket(uint256,address)
          handler: handleMarketRemoved
        - event: LogSetEarningsRate((uint256))
          handler: handleEarningsRateUpdate
        - event: LogSetMaxNumberOfMarketsWithBalancesAndDebt(uint256)
          handler: handleSetMaxNumberOfMarketsWithBalancesAndDebt
        - event: LogSetMarginPremium(uint256,(uint256))
          handler: handleSetMarginPremium
        - event: LogSetSpreadPremium(uint256,(uint256))
          handler: handleSetLiquidationSpreadPremium
        - event: LogSetIsClosing(uint256,bool)
          handler: handleSetIsMarketClosing
        - event: LogSetMaxWei(uint256,(bool,uint256))
          handler: handleSetMaxWei
        - event: LogSetPriceOracle(uint256,address)
          handler: handleSetPriceOracle
        - event: LogSetInterestSetter(uint256,address)
          handler: handleSetInterestSetter
  - kind: ethereum/contract
    name: DolomiteAmmRouter
    network: {{network}}
    source:
      abi: DolomiteAmmRouterProxy
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/margin-position-proxy.ts
      entities:
        - MarginPosition
        - Transaction
      abis:
        - name: DolomiteAmmRouterProxy
          file: ./abis/dolomite-amm-router-proxy.json
        - name: DolomiteMargin
          file: ./abis/dolomite-margin.json
      eventHandlers:
        - event: MarginPositionOpen(indexed address,indexed uint256,address,address,address,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)))
          handler: handleMarginPositionOpen
        - event: MarginPositionClose(indexed address,indexed uint256,address,address,address,((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)),((bool,uint256),(bool,uint128)))
          handler: handleMarginPositionClose
  - kind: ethereum/contract
    name: MarginExpiry
    network: {{network}}
    source:
      address: '{{expiryAddress}}'
      abi: DolomiteMarginExpiry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/margin-expiration.ts
      entities:
        - MarginPosition
        - Transaction
      abis:
        - name: DolomiteMarginExpiry
          file: ./abis/dolomite-margin-expiry.json
        - name: DolomiteMargin
          file: ./abis/dolomite-margin.json
      eventHandlers:
        - event: ExpirySet(address,uint256,uint256,uint32)
          handler: handleSetExpiry
        - event: LogExpiryRampTimeSet(uint256)
          handler: handleSetExpiryRampTime
  - kind: ethereum/contract
    name: BorrowPositionProxy
    network: {{network}}
    source:
      abi: BorrowPositionProxy
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/borrow-position-proxy.ts
      entities:
        - BorrowPosition
      abis:
        - name: BorrowPositionProxy
          file: ./abis/borrow-position-proxy.json
        - name: DolomiteMargin
          file: ./abis/dolomite-margin.json
      eventHandlers:
        - event: BorrowPositionOpen(indexed address,indexed uint256)
          handler: handleOpenBorrowPosition
templates:
  - kind: ethereum/contract
    name: AmmPair
    network: {{network}}
    source:
      abi: AmmPair
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/amm-core.ts
      entities:
        - AmmPair
        - Token
        - Transaction
      abis:
        - name: AmmPair
          file: ./abis/amm-pair.json
        - name: DolomiteMargin
          file: ./abis/dolomite-margin.json
      eventHandlers:
        - event: Mint(indexed address,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,uint256,uint256,indexed address)
          handler: handleBurn
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: handleSwap
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleERC20Transfer
        - event: Sync(uint112,uint112)
          handler: handleSync
  - kind: ethereum/contract
    name: IsolationModeVault
    network: {{network}}
    source:
      abi: IsolationModeFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/isolation-mode-vaults.ts
      entities:
        - IsolationModeVaultMap
      abis:
        - name: IsolationModeFactory
          file: ./abis/isolation-mode-vault-factory.json
      eventHandlers:
        - event: VaultCreated(indexed address,address)
          handler: handleVaultCreated
